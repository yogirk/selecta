{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import ReactMarkdown from'react-markdown';import remarkGfm from'remark-gfm';import'./ChatInterface.css';// Placeholder for an icon, you would typically use an SVG or an icon library\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SendIcon=()=>/*#__PURE__*/_jsx(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\",fill:\"currentColor\"})});// Simple Typing Indicator Component\nconst TypingIndicator=()=>{const phrases=[\"  Thinking about the query\",\"  Understanding the table schema and underlying data\",\"  Generating a plan to come up with answers and insights\",\"  Performing accurate NL2SQL conversion\",\"  Making API calls to BigQuery\",\"  Fetching SQL response from BigQuery\",\"  Processing result\"];const[currentPhraseIndex,setCurrentPhraseIndex]=useState(0);useEffect(()=>{const interval=setInterval(()=>{setCurrentPhraseIndex(prevIndex=>(prevIndex+1)%phrases.length);},5000);// Change phrase every 2 seconds\nreturn()=>clearInterval(interval);// Clean up the interval on component unmount\n},[phrases.length]);return/*#__PURE__*/_jsx(\"div\",{className:\"message bot typing-indicator\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"message-bubble\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"typing-dots\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"dot\"}),/*#__PURE__*/_jsx(\"span\",{className:\"dot\"}),/*#__PURE__*/_jsx(\"span\",{className:\"dot\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"typing-text\",children:phrases[currentPhraseIndex]})]})});};const suggestedQuestions=[{heading:'Understanding BQ Dataset',question:'Describe the tables and the data that you can answer questions over.'},{heading:'Higher Distribution Cost',question:'Identify and show distribution centers with unusually high distribution costs relative to the average distribution costs for similar product categories?'},{heading:'Problematic Product categories',question:'Calculate the return rate per product category, considering only orders that have been both shipped and delivered, to identify problematic product categories?'},{heading:'Multi-Channel Attribution',question:'Calculate the conversion rate (percentage of events leading to an order) for each browser type, to optimize website compatibility and user experience?'},{heading:'Most Expensive Products',question:'Find the top 5 most expensive products (based on retail price) within each category?'},{heading:'Potential Bot Attacks',question:'Identify IP addresses associated with a disproportionately high number of distinct user sessions, potentially indicating shared proxies or bot networks?'}];const ChatInterface=()=>{var _messages;const[messages,setMessages]=useState([{id:1,text:\"Hello! I am Retail DataWise. I can answer business questions over your BigQuery data. How can I assist you today?\",sender:'bot',timestamp:new Date()}]);const[inputValue,setInputValue]=useState('');const[isLoading,setIsLoading]=useState(false);const[sessionId,setSessionId]=useState(null);const[userId]=useState(`user_${Date.now()}`);// Simple unique user ID\nconst messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(scrollToBottom,[messages]);const handleInputChange=e=>{setInputValue(e.target.value);};const handleSuggestionClick=question=>{setInputValue(question);// Set the input value to the suggested question\n// Programmatically trigger the send message action\n// We need to simulate the event object or modify handleSendMessage to accept the message directly\n// Let's modify handleSendMessage to accept an optional message string\n// handleSendMessage({ preventDefault: () => {} }, question); // Pass a dummy event and the question\n};// Modify handleSendMessage to accept an optional message string\nconst handleSendMessage=async function(e){let messageString=arguments.length>1&&arguments[1]!==undefined?arguments[1]:inputValue;e.preventDefault();const messageToSend=messageString.trim();// Use the passed string or current inputValue\nif(messageToSend===''||isLoading)return;const userMessage={id:Date.now(),text:messageToSend,sender:'user',timestamp:new Date()};setMessages(prevMessages=>[...prevMessages,userMessage]);setInputValue('');// Clear input after sending\nsetIsLoading(true);try{let requestBody;const currentInputValue=messageToSend;// Use the captured messageToSend\nif(!sessionId){console.log(\"No session ID, creating a new session and sending message...\");requestBody={user_id:userId,message:{message:currentInputValue,role:'user'}};}else{console.log(\"Existing session ID, sending message:\",sessionId);requestBody={user_id:userId,session_id:sessionId,message:{message:currentInputValue,role:'user'}};}const response=await fetch('/api/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(requestBody)});if(!response.ok){const errorData=await response.json().catch(()=>({detail:\"Unknown error occurred\"}));throw new Error(`HTTP error! status: ${response.status} - ${errorData.detail||errorData.error||\"Failed to send/process message\"}`);}const data=await response.json();if(!sessionId&&data.session_id){setSessionId(data.session_id);console.log(\"New session created and ID set:\",data.session_id);}if(data.messages&&data.messages.length>0){const botReplies=data.messages.map((msg,index)=>({id:Date.now()+index,text:msg.content,sender:msg.role==='user'?'user':'bot',timestamp:new Date()}));setMessages(prevMessages=>[...prevMessages,...botReplies]);}else if(data.error){throw new Error(data.error);}else if(!sessionId&&!data.session_id){throw new Error(\"Failed to retrieve session ID and no messages received.\");}else if(data.messages&&data.messages.length===0){console.warn(\"Received empty messages array from bot, but no error:\",data);}}catch(error){console.error('Error sending message:',error);setMessages(prevMessages=>[...prevMessages,{id:Date.now(),text:`Error: ${error.message}`,sender:'system',timestamp:new Date()}]);}finally{var _document$querySelect;setIsLoading(false);(_document$querySelect=document.querySelector('.chat-input input'))===null||_document$querySelect===void 0?void 0:_document$querySelect.focus();}};const formatTimestamp=date=>{return date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-interface-page\",children:[\" \",/*#__PURE__*/_jsx(\"header\",{className:\"page-header chat-page-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"DataWise Agent Chat\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-interface\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[messages.map(msg=>/*#__PURE__*/_jsx(\"div\",{className:`message ${msg.sender}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"message-bubble\",children:[/*#__PURE__*/_jsx(ReactMarkdown,{className:\"message-text\",remarkPlugins:[remarkGfm],children:msg.text}),/*#__PURE__*/_jsx(\"span\",{className:\"message-timestamp\",children:formatTimestamp(msg.timestamp)})]})},msg.id)),isLoading&&((_messages=messages[messages.length-1])===null||_messages===void 0?void 0:_messages.sender)==='user'&&/*#__PURE__*/_jsx(TypingIndicator,{}),\" \",/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(\"div\",{className:\"suggested-questions\",children:suggestedQuestions.map((suggestion,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"suggestion-card\",onClick:()=>handleSuggestionClick(suggestion.question),children:[/*#__PURE__*/_jsx(\"h4\",{children:suggestion.heading}),/*#__PURE__*/_jsx(\"p\",{children:suggestion.question})]},index))}),/*#__PURE__*/_jsxs(\"form\",{className:\"chat-input-area\",onSubmit:handleSendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputValue,onChange:handleInputChange,placeholder:\"Type your message...\",\"aria-label\":\"Chat input\",disabled:isLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading||inputValue.trim()==='',\"aria-label\":\"Send message\",children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loader\"}):/*#__PURE__*/_jsx(SendIcon,{})})]})]})]});};export default ChatInterface;","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","remarkGfm","jsx","_jsx","jsxs","_jsxs","SendIcon","width","height","viewBox","fill","xmlns","children","d","TypingIndicator","phrases","currentPhraseIndex","setCurrentPhraseIndex","interval","setInterval","prevIndex","length","clearInterval","className","suggestedQuestions","heading","question","ChatInterface","_messages","messages","setMessages","id","text","sender","timestamp","Date","inputValue","setInputValue","isLoading","setIsLoading","sessionId","setSessionId","userId","now","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleInputChange","e","target","value","handleSuggestionClick","handleSendMessage","messageString","arguments","undefined","preventDefault","messageToSend","trim","userMessage","prevMessages","requestBody","currentInputValue","console","log","user_id","message","role","session_id","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","catch","detail","Error","status","error","data","botReplies","map","msg","index","content","warn","_document$querySelect","document","querySelector","focus","formatTimestamp","date","toLocaleTimeString","hour","minute","remarkPlugins","ref","suggestion","onClick","onSubmit","type","onChange","placeholder","disabled"],"sources":["/Users/rk/Documents/Projects/conv-analytics-demo/frontend/src/components/ChatInterface/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport './ChatInterface.css';\n\n// Placeholder for an icon, you would typically use an SVG or an icon library\nconst SendIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z\" fill=\"currentColor\"/>\n  </svg>\n);\n\n// Simple Typing Indicator Component\nconst TypingIndicator = () => {\n  const phrases = [\n    \"  Thinking about the query\",\n    \"  Understanding the table schema and underlying data\",\n    \"  Generating a plan to come up with answers and insights\",\n    \"  Performing accurate NL2SQL conversion\",\n    \"  Making API calls to BigQuery\",\n    \"  Fetching SQL response from BigQuery\",\n    \"  Processing result\",\n  ];\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentPhraseIndex((prevIndex) => (prevIndex + 1) % phrases.length);\n    }, 5000); // Change phrase every 2 seconds\n\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, [phrases.length]);\n\n  return (\n    <div className=\"message bot typing-indicator\">\n      <div className=\"message-bubble\">\n      <div className=\"typing-dots\">\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </div>\n        <div className=\"typing-text\">\n          {phrases[currentPhraseIndex]}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst suggestedQuestions = [\n  { heading: 'Understanding BQ Dataset', question: 'Describe the tables and the data that you can answer questions over.' },\n  { heading: 'Higher Distribution Cost', question: 'Identify and show distribution centers with unusually high distribution costs relative to the average distribution costs for similar product categories?'},\n  { heading: 'Problematic Product categories', question: 'Calculate the return rate per product category, considering only orders that have been both shipped and delivered, to identify problematic product categories?' },\n  { heading: 'Multi-Channel Attribution', question: 'Calculate the conversion rate (percentage of events leading to an order) for each browser type, to optimize website compatibility and user experience?' },\n  { heading: 'Most Expensive Products', question: 'Find the top 5 most expensive products (based on retail price) within each category?' },\n  { heading: 'Potential Bot Attacks', question: 'Identify IP addresses associated with a disproportionately high number of distinct user sessions, potentially indicating shared proxies or bot networks?' },\n];\n\nconst ChatInterface = () => {\n  const [messages, setMessages] = useState([\n    { id: 1, text: \"Hello! I am Retail DataWise. I can answer business questions over your BigQuery data. How can I assist you today?\", sender: 'bot', timestamp: new Date() }\n  ]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const [userId] = useState(`user_${Date.now()}`); // Simple unique user ID\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSuggestionClick = (question) => {\n    setInputValue(question); // Set the input value to the suggested question\n    // Programmatically trigger the send message action\n    // We need to simulate the event object or modify handleSendMessage to accept the message directly\n    // Let's modify handleSendMessage to accept an optional message string\n    // handleSendMessage({ preventDefault: () => {} }, question); // Pass a dummy event and the question\n  };\n\n  // Modify handleSendMessage to accept an optional message string\n  const handleSendMessage = async (e, messageString = inputValue) => {\n    e.preventDefault();\n    const messageToSend = messageString.trim(); // Use the passed string or current inputValue\n    if (messageToSend === '' || isLoading) return;\n\n    const userMessage = { id: Date.now(), text: messageToSend, sender: 'user', timestamp: new Date() };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInputValue(''); // Clear input after sending\n    setIsLoading(true);\n\n    try {\n      let requestBody;\n      const currentInputValue = messageToSend; // Use the captured messageToSend\n\n      if (!sessionId) {\n        console.log(\"No session ID, creating a new session and sending message...\");\n        requestBody = {\n          user_id: userId,\n          message: { message: currentInputValue, role: 'user' }\n        };\n      } else {\n        console.log(\"Existing session ID, sending message:\", sessionId);\n        requestBody = {\n          user_id: userId,\n          session_id: sessionId,\n          message: { message: currentInputValue, role: 'user' }\n        };\n      }\n\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(requestBody)\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ detail: \"Unknown error occurred\" }));\n        throw new Error(`HTTP error! status: ${response.status} - ${errorData.detail || errorData.error || \"Failed to send/process message\"}`);\n      }\n\n      const data = await response.json();\n\n      if (!sessionId && data.session_id) {\n        setSessionId(data.session_id);\n        console.log(\"New session created and ID set:\", data.session_id);\n      }\n\n      if (data.messages && data.messages.length > 0) {\n        const botReplies = data.messages.map((msg, index) => ({\n          id: Date.now() + index,\n          text: msg.content,\n          sender: msg.role === 'user' ? 'user' : 'bot',\n          timestamp: new Date()\n        }));\n        setMessages(prevMessages => [...prevMessages, ...botReplies]);\n      } else if (data.error) {\n         throw new Error(data.error);\n      } else if (!sessionId && !data.session_id) {\n        throw new Error(\"Failed to retrieve session ID and no messages received.\");\n      } else if (data.messages && data.messages.length === 0) {\n        console.warn(\"Received empty messages array from bot, but no error:\", data);\n      }\n\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prevMessages => [...prevMessages, { id: Date.now(), text: `Error: ${error.message}`, sender: 'system', timestamp: new Date() }]);\n    } finally {\n        setIsLoading(false);\n        document.querySelector('.chat-input input')?.focus();\n    }\n  };\n\n  const formatTimestamp = (date) => {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  return (\n    <div className=\"chat-interface-page\"> {/* Renamed for clarity and page-level styling */}\n      <header className=\"page-header chat-page-header\">\n        <h1>DataWise Agent Chat</h1>\n      </header>\n      <div className=\"chat-interface\"> {/* Kept original for existing styles, will adjust CSS */}\n        <div className=\"chat-messages\">\n          {messages.map((msg) => (\n            <div key={msg.id} className={`message ${msg.sender}`}>\n            <div className=\"message-bubble\">\n              <ReactMarkdown className=\"message-text\" remarkPlugins={[remarkGfm]}>{msg.text}</ReactMarkdown>\n              <span className=\"message-timestamp\">{formatTimestamp(msg.timestamp)}</span>\n            </div>\n          </div>\n        ))}\n        {isLoading && messages[messages.length - 1]?.sender === 'user' && <TypingIndicator />} {/* Conditionally render typing indicator */}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"suggested-questions\">\n        {suggestedQuestions.map((suggestion, index) => (\n          <div\n            key={index}\n            className=\"suggestion-card\"\n            onClick={() => handleSuggestionClick(suggestion.question)}\n          >\n            <h4>{suggestion.heading}</h4>\n            <p>{suggestion.question}</p>\n          </div>\n        ))}\n      </div>\n      <form className=\"chat-input-area\" onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder=\"Type your message...\"\n          aria-label=\"Chat input\"\n          disabled={isLoading}\n        />\n        <button type=\"submit\" disabled={isLoading || inputValue.trim() === ''} aria-label=\"Send message\">\n          {isLoading ? <div className=\"loader\"></div> : <SendIcon />}\n        </button>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}